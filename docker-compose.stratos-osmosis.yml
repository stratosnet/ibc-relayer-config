version: "3.9"

services:
  hermes:
    container_name: hermes
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 1G
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - CONFIG_FILE=./stratos-osmosis/config.toml
    stdin_open: true
    tty: true
    volumes:
      - hermes_volume:/home/hermes/.hermes
      - ./scripts:/tmp/scripts
    # command: tail -f /dev/null
    command: hermes --config .hermes/config.toml start
    logging:
      driver: "json-file"
      options:
        max-size: "512m"
    labels:
      ofelia.enabled: "true"
      ofelia.job-exec.stratos-daily.schedule: "@daily"
      ofelia.job-exec.stratos-daily.command: "sh /tmp/scripts/stratos/daily.sh"
      ofelia.job-exec.stratos-hourly.schedule: "@hourly"
      ofelia.job-exec.stratos-hourly.command: "sh /tmp/scripts/stratos/hourly.sh"
      ofelia.job-exec.osmosis-daily.schedule: "@daily"
      ofelia.job-exec.osmosis-daily.command: "sh /tmp/scripts/osmosis/daily.sh"
      ofelia.job-exec.osmosis-hourly.schedule: "@hourly"
      ofelia.job-exec.osmosis-hourly.command: "sh /tmp/scripts/osmosis/hourly.sh"

  restarter:
    container_name: restarter
    image: docker:cli
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      # in seconds
      - RESTART_TIME=86400
    depends_on:
      - hermes
    command:
      - /bin/sh
      - -c
      - |
        while true; do
          echo "Await for restart in $(env | grep RESTART_TIME | grep -oe '[^=]*$') seconds..."
          sleep "$(env | grep RESTART_TIME | grep -oe '[^=]*$')"
          echo "Re-starting..."
          docker stop hermes
          docker start hermes
          echo "Re-start completed"
        done
    logging:
      driver: "json-file"
      options:
        max-size: "512m"

  ofelia:
    container_name: ofelia
    image: mcuadros/ofelia:latest
    restart: unless-stopped
    depends_on:
      - hermes
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    command: daemon --docker
    logging:
      driver: "json-file"
      options:
        max-size: "512m"

volumes:
  hermes_volume:
